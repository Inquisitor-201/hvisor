name: "Pull Request Labeler"
on:
  pull_request_target:
    types: [opened, synchronize, edited]

jobs:
  triage:
    runs-on: ubuntu-latest
    steps:
    - name: Create labels if they don't exist
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const labels = [
            {
              name: 'aarch64',
              color: '0052CC',
              description: 'Changes related to AArch64 architecture'
            },
            {
              name: 'loongarch64',
              color: '0052CC',
              description: 'Changes related to LoongArch64 architecture'
            },
            {
              name: 'riscv64',
              color: '0052CC',
              description: 'Changes related to RISC-V 64 architecture'
            },
            {
              name: 'x86_64',
              color: '0052CC',
              description: 'Changes related to x86_64 architecture'
            },
            {
              name: 'documentation',
              color: '0075CA',
              description: 'Documentation changes'
            },
            {
              name: 'ci',
              color: 'D93F0B',
              description: 'CI/CD changes'
            },
            {
              name: 'security',
              color: 'D73A4A',
              description: 'Security related changes'
            },
            {
              name: 'bug',
              color: 'D73A4A',
              description: 'Bug fixes'
            },
            {
              name: 'feature',
              color: 'A2EEEF',
              description: 'New features'
            },
            {
              name: 'good first issue',
              color: '7057FF',
              description: 'Good for newcomers'
            },
            {
              name: 'help wanted',
              color: '008672',
              description: 'Extra attention is needed'
            },
            {
              name: 'question',
              color: 'D876E3',
              description: 'Further information is requested'
            },
            {
              name: 'invalid',
              color: 'E4E669',
              description: 'This doesn\'t seem right'
            },
            {
              name: 'wontfix',
              color: 'FFFFFF',
              description: 'This will not be worked on'
            },
            {
              name: 'duplicate',
              color: 'CFD3D7',
              description: 'This issue or pull request already exists'
            }
          ];

          for (const label of labels) {
            try {
              await github.rest.issues.getLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                name: label.name
              });
            } catch (error) {
              if (error.status === 404) {
                await github.rest.issues.createLabel({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  name: label.name,
                  color: label.color,
                  description: label.description
                });
              }
            }
          }

    - uses: actions/labeler@v5
      with:
        repo-token: "${{ secrets.GITHUB_TOKEN }}"
    
    - name: Label PR based on title
      if: github.event_name == 'pull_request_target'
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const title = context.payload.pull_request.title.toLowerCase();
          const labels = [];
          
          if (title.includes('fix') || title.includes('bug')) {
            labels.push('bug');
          }
          if (title.includes('feat') || title.includes('feature')) {
            labels.push('feature');
          }
          if (title.includes('docs') || title.includes('documentation')) {
            labels.push('documentation');
          }
          if (title.includes('ci')) {
            labels.push('ci');
          }
          if (title.includes('aarch64') || title.includes('aarch')) {
            labels.push('aarch64');
          }
          if (title.includes('loongarch64') || title.includes('loongarch')) {
            labels.push('loongarch64');
          }
          if (title.includes('riscv64') || title.includes('riscv')) {
            labels.push('riscv64');
          }
          if (title.includes('x86_64') || title.includes('x86')) {
            labels.push('x86_64');
          }
          
          if (labels.length > 0) {
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: labels
            });
          }